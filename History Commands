## Day 3
 vi kops.sh
 . ./kops.sh
 kops
 kops get --help
 kops get clusters
 kubectl get nodes
 aws autoscaling describe-auto-scaling-groups
 aws autoscaling --help
 aws autoscaling help
 clear
 sudo hostnamectl set-hostname kops
 bash
 clear
 aws autoscaling update-auto-scaling-group  --auto-scaling-group-name nodes-us-west-2c.ctjgpbatch27-2024-11-13-16-11.k8s.loca   --min-size 2  --max-size 2 --region us-west-2
 aws autoscaling update-auto-scaling-group  --auto-scaling-group-name nodes-us-west-2c.ctjgpbatch27-2024-11-13-16-11.k8s.local   --min-size 2  --max-size 2 --region us-west-2
 kubectl get nodes
 kops export kubeconfig --admin
 kubectl get nodes
 ls -al
 cat .kube/config
 clear
 kubectl get nodes
 kubectl get pod
 kubectl get pod --help
 kubectl get pods --all-namespaces
 kubectl run pod-1 --image nginx
 kubectl get pod
 kubectl describe pod pod-1
 clear
 kubectl run pod-1 --image nginx --dry-run=client -o yaml
 kubectl run pod-1 --image nginx --dry-run=client -o yaml > pod.yaml
 ls
 cat pod.yaml
 vi pod.yaml
 clear
 cat pod.yaml
 kubectl get po
 kubectl apply -f pod.yaml
 kubectl get po
 kubectl describe po pod-2
 kubectl get po -A
 kubectl get ns
 kubectl get namespace
 kubectl create ns test-ns
 kubectl get ns
 kubectl get all
 kubectl get all -n test-ns
 kubectl run pod-3 --image nginx -n test-ns
 kubectl get all -n test-ns
 vi pod.yaml
 kubectl apply -f pod.yaml
 kubectl get all -n test-ns
 kubectl get po -n test-ns
 kubectl get po -A
 ubuntu@kops:~$ cat pod.yaml
apiVersion: v1
kind: Pod
metadata:
  namespace: test-ns
  labels:
    app: webapp
  name: pod-4
spec:
  containers:
  - image: nginx
    name: container-1
  - name: container-2
    image: busybox
    command:
    - /bin/sh
    - -c
    - sleep 3000
-----------------------------------------------------------------------------------------
### Day 4

kops export kubeconfig --admin
clear
kubectl get po
kubectl get po -A
kubectl get po -A -o wide
clear
kubectl get po -A
kubectl get po -A -o wide
kubectl describe pod  kube-scheduler-i-03a63b90711a4d78d -n kube-system
clear
kubectl get po -A
kubectl get po -A -o wide
kubectl get ns
kubectl api-resources
clear
ls
cat pod.yaml
kubectl run test-pod1 --image httpd --help
kubectl run test-pod1 --image httpd --label app=webapp --port 80
kubectl run test-pod1 --image httpd --labels app=webapp --port 80
kubectl get po
kubectl get po --show-labels
kubectl get po --show-labels -o wide
kubectl get po --show-labels -o wide -A
clear
kubectl get po --show-labels -o wide
kubectl describe po test-pod1
clear
kubectl get po --show-labels
kubectl label pod test-pod1 tier=frontend type=webserver
kubectl get po --show-labels
clear
vi httpd-pod.yaml
kubectl apply -f httpd-pod.yaml
vi httpd-svc.yaml
kubectl apply -f httpd-svc.yaml
kubectl get pod
kubectl get service
kubectl get pod -o wide
kubectl describe service httpd-svc
curl http://httpd-svc
curl http://100.66.43.221
curl 100.66.43.221:80
ssh -t ubuntu@<Node_IP> curl <Cluster_IP>:<Service_Port>
kubectl get pod -o wide
ssh -t ubuntu@172.20.170.2160 curl 100.66.43.221:80
ssh -t ubuntu@172.20.170.2160 curl http://100.66.43.221
clear
kubectl get pod -o wide
kubectl describe service httpd-svc
kubectl get ep httpd-svc
vi httpd-svc.yaml
kubectl apply -f httpd-svc.yaml
kubectl get svc
kubectl exec -it httpd-pod -- bash
clear
kubectl get svc
vi httpd-svc.yaml
kubectl apply -f httpd-svc.yaml
kubectl get svc
-----------------------------------------------------------------------------------------
### Day 
